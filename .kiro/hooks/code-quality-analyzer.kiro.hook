{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and provides automated code quality analysis including code smells, design patterns, and best practices suggestions",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": [
      "src/**/*.tsx",
      "src/**/*.ts",
      "api/**/*.js",
      "*.js",
      "*.ts",
      "*.tsx"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify any code smells like long functions, duplicate code, complex conditionals, or poor naming\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for React/TypeScript/Node.js best practices including:\n   - Proper TypeScript typing\n   - React hooks usage and dependencies\n   - Component composition and reusability\n   - Error handling and boundary cases\n   - Performance optimizations (memoization, lazy loading)\n   - Accessibility considerations\n4. **Maintainability**: Suggest improvements for code readability and maintainability\n5. **Security**: Identify potential security issues, especially in API endpoints\n6. **Performance**: Suggest optimizations that won't break existing functionality\n\nProvide specific, actionable suggestions with code examples where helpful. Prioritize suggestions that have the highest impact on code quality while maintaining existing functionality."
  }
}